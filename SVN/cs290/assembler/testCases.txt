#Test cases for the assembler for the LC2200

      #=======================================
      #     Test 1: Reading an empty file     
      #=======================================

Input file:
~EOF

Terminal Output:
Symbols:       0
Lines read:    0
Words written: 0

Output file:
~EOF

#Note: that reading an empty file resulted in an empty output file,
#  the symbol table also has 0 elements in it

   #======================================================
   #     Test 2: Reading in a file and writing a file
   #======================================================

Input file:
halt
~EOF

Terminal Output:
Symbols:       0
Lines read:    1
Words written: 1

Output file:
70000000

#Note: this should test the general ability to read a line and produce
#  output without having errors loading file or writing

   #=============================================
   #     Test 3: Symbols and their addresses     
   #=============================================

Input File:
start: halt
halt
halt
mid: halt
halt
end: halt
~EOF

Terminal Output:
Symbols:       3
start 0
mid 12
end 20
Lines read:    6
Words written: 6

Output file:
700000000
700000000
700000000
700000000
700000000
700000000

#Note: This will display all of the word addresses of the labels in
#  the assembly code processed

       #===========================================
       #     Test 4: Catching undefined labels     
       #===========================================

Input File:
beq $zero $zero miss
beq $zero $zero help
~EOF

Terminal Output:
ERROR: Undefined symbol
miss
ERROR: Undefined symbol
help
Write Canceled
Output file:
~EOF

#Note: This will should catch the all labels it finds that are not
#  defined anywhere in the code.

       #============================================
       #     Test 5: All commands and registers     
       #============================================

Input File:
start: add $at $zero $v0
nand $a0 $a1 $a2
addi $t0 $t1 0
lw $t2 0 $s0
sw $s1 0 $s2
beq $k0 $sp start
jalr $fp $ra
in $at
out $at
la $at done
done: halt
~EOF

Terminal Output:
Symbols:       2
start 0
done 40
Lines read:    11
Words written: 11

Output file:
c
d

70000000
~EOF

#Note: This will test the translation of every single command, along
#  with the translation of every register as well.

   #===========================
   #     Test 6: decl test     
   #===========================

Input file:
decl 10
~EOF

Terminal Output:
Symbols:       0
Lines read:    1
Words written: 10

Output file:
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000

#Note: This simply allocates that many words of memory for the program








PHYSICS

You're so hot you emit light in the visible spectrum

You must be positive and I must be negative, bc between us there's a
lot of potential

You're like a singularity, and I've fallen way past the event horizon.

You must be a mu coefficient of 1, because you've stopped me dead.

I know you're beautiful, because Einstein's theory of
special relativity says every observer must agree.


COMPUTER SCIENCE

I need you so bad, I include you in every file

Girl you're so beautiful, you must have been made in LaTeX

I mean I like you, but you're in namespace std..

You don't just have class, you are, bc you've got some awesome
    	  attributes

#define ME_AND_YOU true


MATHEMATICS

We must be one over x, because we don't have a limit.
   (, because our limit is undefined)

You're better than pi, you make me feel so irrational

How fast can we move? Let's integrate our positions to find out


PHILOSOPHY

Is it to be or not to be, with you

Ego, super ego, conscience, the only


PSYCHOLOGY

You must be my pre-botzinger complex, because you take my breath away

I must be schizophrenic, because you've been in my mind all day
