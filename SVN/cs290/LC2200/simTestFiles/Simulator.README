To make this program, type
make LC2200

To run the simulator, type the command
./simTestFiles/LC2200 [<memory size in bytes>]

The memory size in bytes is an optional command line argument. If you
do not specify a size, the default size of 1024 bytes will be used.
Numbers greater than 1024 are not allowed.

If you specify a memory size, the size must be positive (without the +
sign in front of the number), less than 1024 and must be a multiple
of 4. 

Once the simulator starts, you will get the simulator prompt
M >
When the simulator starts all the registers and the PC are initialised
to zero.

At the prompt you can use the following commands:
1. load <filename>
   Loads the program in filename, if the file exists and can be read,
   into memory starting at the next free location in memory. If this
   is the first program being loaded after the simulator starts, the
   program will be loaded at address 0. The frame pointer is set to
   the address where the program is loaded. The stack pointer is set
   to the address of the last word in memory.

2. step [<num steps>]
   Starting at the current value of PC, steps through the next 
   <num steps> number of instructions, or until the halt instruction
   is executed or the machine encounters an error. <num steps> is
   an optional argument. If not specified, step will execute the next (one)
   instruction. 

3. run
   Execute the instructions of the program starting at the current
   value of PC until the halt instruction is executed, or the machine
   encounters an error.

4. cpu
   Diplays the contents of the PC and all the registers.

5. mem <start addr> <end addr>
   Displays the contents of memory starting with the word containing
   the byte at address <start address> and up through the word
   containing the byte at address <end address>.

6. quit
   Quit the simulator.

All other strings input as commands will give an error message.

All commands must be in lower case.

If the machine encounters an error while executing, the simulator will
indicate that there was an error, but not what caused the error.

NOTE: You could load a program and run it, and then load another
program without quitting the simulator. In this case, the second
program will be loaded at the first word, say at address W, after the
memory locations occupied by the first program. The frame pointer will
be set to W. The PC will be set to W. The stack pointer will be set to
the address of the last word of memory. 
** The other registers will not be initialised. **


