Python / C++ Guidelines for Roanoke College Computer Science Dpmt

How to decide the name for your variables.

___________________________________
Preprocessor/Constant/Global:

ALL_CAPS_UNDERSCORE_SEPARATED

___________________________________
Member/Attribute:

UnderscoreAtTheEnd_

___________________________________
Standard Use:

Have the length of the name correspond to the
  scope of the variable. 

Common abbreviations only.
  
Make the variable meaningful.
  -Could a classmate walk up and immediately know what the variale
    does? 
  -Does it have units? If so then include that in its name

___________________________________
General Knowledge

Abbreviations:
  mcsp  - math computer science physics
  dpmt  - department
  str   - string
  avg   - average
  fmt   - format
  min   - minimum
  max   - maximum
  col   - column
  denom - denominator
  numer - numerator

Units: Usually used if the name of the unit is > 4 letters long
  mm  - milimeter
  m   - meter
  cm  - centimeter
  km  - kilometer
  ft  - foot
  mi  - mile

  ms  - milisecond
  sc  - second
  mn  - minute
  hr  - hour
  wk  - week
  yr  - year

  
______________________________________________________________________

begin / end  = inclusive / exclusive

first / last = inclusive / inclusive

Avoid negated terms when naming booleans.

Prefix boolean variables with "is" or "has"

-> Use naming to identify when a function is computationally
   expensive 

-> Make sure all "get" commands are constant time

Be consistent with yourself, but don't try and change other people's
  code to match yours!

______________________________________________________________________

Provide a range for variables that can be assigned by the users
 or at least guidelines for what values produce what results

______________________________________________________________________

When comparing:
left hand side  - the variable being interrogated whose value is more in flux
right hand side - the variable that is more constant or stable

if-else should have positive/more simple case first
conditional operator should only be used if it is short and simple (readable)
return / continue - should be used for checks but not excessively
avoid do-while

minimize nesting (use variables to do this)
Use variables to break up cases

Use demorgan's law to shorten logic
Avoid short-circuit logic in general (knowing the false left hand side
                                     of and immediately returns false)

use summary variables to make if statements easier to read

